package routes

import (
	"github.com/gofiber/fiber/v2"
	"{{.PackagePath}}/handlers"
	"{{.PackagePath}}/interfaces"
	"{{.PackagePath}}/models"
	"{{.PackagePath}}/repository"
	"{{.PackagePath}}/service"
	"github.com/julhan07/infrastructure-be/pgx"
)

type rest{{.Name}}Router struct {
	router  fiber.Router
	handler interfaces.{{.Name}}Handler
}

func {{.LowerName}}Router(pgx *pgx.Pgx) interfaces.{{.Name}}Handler {
	{{.LowerName}}Repo := repository.New{{.Name}}Repository(*pgx, &models.{{.Name}}{})
	{{.LowerName}}Service := service.New{{.Name}}Service({{.LowerName}}Repo)
	return handlers.New{{.Name}}Handler({{.LowerName}}Service)
}

func New{{.Name}}Router(router fiber.Router, pgx *pgx.Pgx) *rest{{.Name}}Router {
    handler := {{.LowerName}}Router(pgx)
	res := rest{{.Name}}Router{router, handler}
	res.Setup()
	return &res
}

func (h *rest{{.Name}}Router) Setup() {
	h.router.Get("/{{.LowerName}}", h.handler.FindAll)
	h.router.Get("/{{.LowerName}}/:id", h.handler.GetByID)
	h.router.Post("/{{.LowerName}}", h.handler.Create)
	h.router.Put("/{{.LowerName}}/:id", h.handler.Update)
	h.router.Delete("/{{.LowerName}}/:id", h.handler.Delete)
}
